# auto-generated by grc.converter

id: clenabled_clFFT
label: OpenCL FFT
category: '[OpenCL-Enabled]'

parameters:
-   id: type
    label: Data Type
    dtype: enum
    options: [complex, float]
    option_attributes:
        datatype: ['1', '2']
        input: [complex, float]
        output: [complex, float]
    hide: part
-   id: openCLPlatform
    label: OpenCL Platform Type
    dtype: enum
    options: ['1', '2', '3', '4']
    option_labels: [GPU, Accelerator, CPU, Any]
-   id: devices
    label: OpenCL Device
    dtype: enum
    options: ['1', '2']
    option_labels: [Any, Specific]
    option_attributes:
        hide_specific: [all, '']
-   id: platformId
    label: Platform Id
    dtype: enum
    options: ['0', '1', '2', '3']
    hide: ${ devices.hide_specific }
-   id: deviceId
    label: Device Id
    dtype: enum
    options: ['0', '1', '2', '3']
    hide: ${ devices.hide_specific }
-   id: setDebug
    label: Debug
    dtype: enum
    options: ['0', '1']
    option_labels: ['Off', 'On']
-   id: fft_dir
    label: FFT Direction
    dtype: enum
    options: ['-1', '1']
    option_labels: [Forward, Reverse]
-   id: window
    label: Window
    dtype: real_vector
    default: window.blackmanharris(1024)
-   id: fft_size
    label: FFT Size
    dtype: int
    default: '1024'
    hide: ${ 'part' if fft_size == 1 else 'none' }

inputs:
-   domain: stream
    dtype: ${ type.input }
    vlen: ${ fft_size }

outputs:
-   domain: stream
    dtype: ${ type.output }
    vlen: ${ fft_size }

templates:
    imports: |-
        from gnuradio.fft import window
        import clenabled
    make: "% if devices == 1:\n\tclenabled.clFFT(${fft_size}, ${fft_dir}, ${window},${type.datatype},${openCLPlatform},1,0,0,${setDebug})\n\
        \t% else:\n\tclenabled.clFFT(${fft_size}, ${fft_dir}, ${window},${type.datatype},${openCLPlatform},${devices},${platformId},${deviceId},${setDebug})\n\
        \t% endif"

documentation: |-
    This block is an OpenCL enabled version of the built-in FFT block, providing both forward and reverse FFT capabilities.

file_format: 1
